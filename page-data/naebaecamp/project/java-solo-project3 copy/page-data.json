{"componentChunkName":"component---src-templates-blog-template-js","path":"/naebaecamp/project/java-solo-project3 copy/","result":{"data":{"cur":{"id":"b7a1115b-117a-5260-9c04-f657f4f5b7cb","html":"<p>팀 과제에 추가된 요구사항을 구현했다. 간단한 부분을 맡게되어서 빨리 끝났다.</p>\n<h3 id=\"1-요청사항-입력-기능-추가\" style=\"position:relative;\"><a href=\"#1-%EC%9A%94%EC%B2%AD%EC%82%AC%ED%95%AD-%EC%9E%85%EB%A0%A5-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80\" aria-label=\"1 요청사항 입력 기능 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 요청사항 입력 기능 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>addProduct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token class-name\">String</span> writeRequest <span class=\"token operator\">=</span> <span class=\"token function\">printQuestion</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"writeRequest\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\r\n\t<span class=\"token comment\">//요청 사항 입력 여부 확인</span>\r\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>writeRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t    <span class=\"token comment\">//요청사항이 조건에 맞을 때까지</span>\r\n\t    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"요청 사항을 20자 이하로 입력해 주세요.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t        <span class=\"token class-name\">String</span> request <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\r\n\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkRequestLength</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t            order<span class=\"token punctuation\">.</span><span class=\"token function\">setRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n\t        <span class=\"token punctuation\">}</span>\r\n\t    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">/**\r\n * 요청사항 길이 확인\r\n *\r\n * @param request : 입력 받은 요청 사항\r\n * @return : true : 조건 충족, false : 조건 불충족\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkRequestLength</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>요청사항은 필수가 아니기 때문에 입력한다고 선택할 경우에만 입력받도록 했다.</li>\n<li>20자이하의 조건이 만족할 때까지 재요청을 한다.</li>\n<li>조건을 만족한다면 order 인스턴스가 가지고 있는 request 필드에 저장한다.</li>\n</ul>\n<h3 id=\"2-주문-확인-시-요청사항-출력\" style=\"position:relative;\"><a href=\"#2-%EC%A3%BC%EB%AC%B8-%ED%99%95%EC%9D%B8-%EC%8B%9C-%EC%9A%94%EC%B2%AD%EC%82%AC%ED%95%AD-%EC%B6%9C%EB%A0%A5\" aria-label=\"2 주문 확인 시 요청사항 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 주문 확인 시 요청사항 출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ 주문 요청사항 ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>order인스턴스가 가지고 있는 request를 가지고 온다.</li>\n</ul>\n<h3 id=\"3-주문-상태-및-주문-상태-변경-기능-추가\" style=\"position:relative;\"><a href=\"#3-%EC%A3%BC%EB%AC%B8-%EC%83%81%ED%83%9C-%EB%B0%8F-%EC%A3%BC%EB%AC%B8-%EC%83%81%ED%83%9C-%EB%B3%80%EA%B2%BD-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80\" aria-label=\"3 주문 상태 및 주문 상태 변경 기능 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 주문 상태 및 주문 상태 변경 기능 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> status<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">/**\r\n * 주문 완료 처리\r\n * @param status : 현재 주문 처리 상태\r\n */</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">switchStatus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>status<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Order 클래스에 status 필드를 추가하고 false로 초기화했다.</li>\n<li>주문 상태를 받아 변경해주는 switchStatus 메소드를 구현했다.</li>\n</ul>","excerpt":"팀 과제에 추가된 요구사항을 구현했다. 간단한 부분을 맡게되어서 빨리 끝났다. 1. 요청사항 입력 기능 추가 요청사항은 필수가 아니기 때문에 입력한다고 선택할 경우에만 입력받도록 했다. 20자이하의 조건이 만족할 때까지 재요청을 한다. 조건을 만족한다면 order 인스턴스가 가지고 있는 request 필드에 저장한다. 2. 주문 확인 시 요청사항 출력 order인스턴스가 가지고 있는 request를 가지고 온다. 3. 주문 상태 및 주문 상태 변경 기능 추가 Order 클래스에 status 필드를 추가하고 false로 초기화했다. 주문 상태를 받아 변경해주는 switchStatus 메소드를 구현했다.","frontmatter":{"date":"October 25, 2023","title":"내일배움캠프) JAVA 개인 프로젝트 과제 구현 4차","categories":"내일배움캠프","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/project/java-solo-project3 copy/"}},"next":{"id":"bd7926d5-5b24-5f10-8f58-84df1f55a79c","html":"<p>1, 2차 과제 구현 게시글을 작성하면서 코드의 변화를 기록하기가 어려웠는데, 이번 게시글은 간단하게 작성하기로 하고 <a href=\"https://github.com/hwana/kiosk/commit/ed5138ddac55f9f0b7eb719569fa35dfbbdeaaf5\">깃 커밋내역</a>을 활용하기로 했다😗</p>\n<p>3차 구현에서 수정된 부분은 아래와 같다.</p>\n<h2 id=\"1-orderprocess-클래스-신규-생성\" style=\"position:relative;\"><a href=\"#1-orderprocess-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%8B%A0%EA%B7%9C-%EC%83%9D%EC%84%B1\" aria-label=\"1 orderprocess 클래스 신규 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. OrderProcess 클래스 신규 생성</h2>\n<ul>\n<li>현재 상황 : Order 클래스에서 주문을 처리하기 위한 모든 작업을 진행했음</li>\n<li>문제점 : 주문 인스턴스를 위한 멤버들과 주문을 처리하기 위한 멤버들이 혼잡하게 섞여있었다.</li>\n<li>해결방안 : Order 클래스에서 주문을 처리하는 부분을 분리하여 OrderProcess 클래스로 신규 생성</li>\n<li>결론 : 각각의 클래스가 본인의 역할만 수행하고 있게 된 것 같다.</li>\n</ul>\n<h2 id=\"2-전체-주문-목록에-값이-잘못-들어가는-부분-수정\" style=\"position:relative;\"><a href=\"#2-%EC%A0%84%EC%B2%B4-%EC%A3%BC%EB%AC%B8-%EB%AA%A9%EB%A1%9D%EC%97%90-%EA%B0%92%EC%9D%B4-%EC%9E%98%EB%AA%BB-%EB%93%A4%EC%96%B4%EA%B0%80%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%A0%95\" aria-label=\"2 전체 주문 목록에 값이 잘못 들어가는 부분 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 전체 주문 목록에 값이 잘못 들어가는 부분 수정</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 전</span>\r\nallOrderList<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderList<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">//수정 후 </span>\r\nallOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>문제점 : <code class=\"language-text\">getOrDefault(key, defaultValue)</code> 메소드에 기본값을 잘못 입력하여 전체 주문 목록에 값이 한번 더 더해져서 들어가는 상황 발생</li>\n<li>해결방안 : 기본 값을 0으로 변경</li>\n</ul>\n<h2 id=\"3-메소드의-분리\" style=\"position:relative;\"><a href=\"#3-%EB%A9%94%EC%86%8C%EB%93%9C%EC%9D%98-%EB%B6%84%EB%A6%AC\" aria-label=\"3 메소드의 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 메소드의 분리</h2>\n<ul>\n<li>\n<p>현재 상황 : 화면에 안내문구를 출력하는 메소드에서 관련 없는 작업(총 금액 구하기 등..)을 수행함</p>\n</li>\n<li>\n<p>문제점 : 메소드의 역할이 모호해짐</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 전</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아래와 같이 주문하시겠습니까?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Orders ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> maxCount <span class=\"token operator\">=</span> orderList<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token operator\">::</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> <span class=\"token function\">getOrderList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//개수 출력하지 않음</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>orderList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//1개가 아니라면 개수 출력</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token function\">setTotalPrice</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//주문 건 별 총 금액 구하기 : 관련 없는 작업</span>\r\n    <span class=\"token function\">insertAllOrderList</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//주문 품목 전체 리스트에 담기 : 관련 없는 작업</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">setAllTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//전체 주문 금액 구하기 : 관련 없는 작업</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Total Price ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>totalPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 주문     2. 메뉴판\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>해결 방안 : 메소드 안에 관련 없는 작업은 따로 메소드로 분리하여 메소드의 역할과 책임을 구분함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 후 : 관련 없는 메소드 제거</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아래와 같이 주문하시겠습니까?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Orders ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">//장바구니에 동일한 품목이 2개이상일때만 개수 표현을 하기 위해서 최대값을 구함</span>\r\n<span class=\"token keyword\">int</span> maxCount <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token operator\">::</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">//장바구니에 각 품목이 한개씩만 담겼다면</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//개수 출력하지 않음</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//1개가 아니라면 개수 출력</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Total Price ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 주문     2. 메뉴판\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">//관련 있는 작업끼리 모아서 메소드로 분리</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">orderSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// 전체 주문 목록에 사용자가 현재 주문한 목록 담기</span>\r\n        allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// 전체 총 금액에 사용자가 현재 주문한 총 금액 담기</span>\r\n    <span class=\"token function\">setAllTotalPrice</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">//대기번호 생성</span>\r\n    <span class=\"token keyword\">int</span> waitingNum <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getWaitingNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"주문이 완료되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"대기번호는 [\"</span> <span class=\"token operator\">+</span> waitingNum <span class=\"token operator\">+</span> <span class=\"token string\">\" ]번 입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(3초 후 메뉴판으로 돌아갑니다.)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">//다음 주문을 위한 주문번호 세팅과 장바구니 초기화</span>\r\n    <span class=\"token function\">resetOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"date":"October 24, 2023","title":"내일배움캠프) JAVA 개인 프로젝트 과제 구현 3차","categories":"내일배움캠프","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/project/java-solo-project3/"}},"prev":{"id":"52fff3f1-0a7b-579d-9141-75c596e3edf3","html":"<h3 id=\"-오늘의-내용정리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC\" aria-label=\" 오늘의 내용정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 오늘의 내용정리</h3>\n<p><a href=\"https://hwana.github.io/naebaecamp/project/java-solo-project4/\">키오스크 만들기 4차</a></p>\n<h3 id=\"-오늘의-마무리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 오늘의 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔚 오늘의 마무리</h3>\n<p>오늘은 튜터면담으로 하루를 시작했다. 짧은 시간의 면담이였지만 이 캠프를 진행하면서 어떤 방향으로 나가야 할지 감이 잡혔다. 객체지향에 계속 집중해야지!</p>\n<p>본격적인 팀 과제 구현이 시작됐다. 난 주문 부분을 맡아서 간단한 기능을 구현하게 됐다. 간단한 구현이라 빨리 끝나서 남은 시간에는 어제 읽었던 책을 마저 읽었다. 내일도 시간이 남는다면 자바에 대해서 더 알아가야겠다.</p>","frontmatter":{"date":"October 25, 2023","title":"TIL) 20231025","categories":"TIL","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/today-i-learned/20231025/"}},"site":{"siteMetadata":{"siteUrl":"https://www.hwana.com","comments":{"utterances":{"repo":"hwana/hwana.github.io"}}}}},"pageContext":{"slug":"/naebaecamp/project/java-solo-project3 copy/","nextSlug":"/naebaecamp/project/java-solo-project3/","prevSlug":"/naebaecamp/today-i-learned/20231025/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}