{"componentChunkName":"component---src-templates-blog-template-js","path":"/naebaecamp/project/java-solo-project3/","result":{"data":{"cur":{"id":"bd7926d5-5b24-5f10-8f58-84df1f55a79c","html":"<p>1, 2차 과제 구현 게시글을 작성하면서 코드의 변화를 기록하기가 어려웠는데, 이번 게시글은 간단하게 작성하기로 하고 <a href=\"https://github.com/hwana/kiosk/commit/ed5138ddac55f9f0b7eb719569fa35dfbbdeaaf5\">깃 커밋내역</a>을 활용하기로 했다😗</p>\n<p>3차 구현에서 수정된 부분은 아래와 같다.</p>\n<h2 id=\"1-orderprocess-클래스-신규-생성\" style=\"position:relative;\"><a href=\"#1-orderprocess-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%8B%A0%EA%B7%9C-%EC%83%9D%EC%84%B1\" aria-label=\"1 orderprocess 클래스 신규 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. OrderProcess 클래스 신규 생성</h2>\n<ul>\n<li>현재 상황 : Order 클래스에서 주문을 처리하기 위한 모든 작업을 진행했음</li>\n<li>문제점 : 주문 인스턴스를 위한 멤버들과 주문을 처리하기 위한 멤버들이 혼잡하게 섞여있었다.</li>\n<li>해결방안 : Order 클래스에서 주문을 처리하는 부분을 분리하여 OrderProcess 클래스로 신규 생성</li>\n<li>결론 : 각각의 클래스가 본인의 역할만 수행하고 있게 된 것 같다.</li>\n</ul>\n<h2 id=\"2-전체-주문-목록에-값이-잘못-들어가는-부분-수정\" style=\"position:relative;\"><a href=\"#2-%EC%A0%84%EC%B2%B4-%EC%A3%BC%EB%AC%B8-%EB%AA%A9%EB%A1%9D%EC%97%90-%EA%B0%92%EC%9D%B4-%EC%9E%98%EB%AA%BB-%EB%93%A4%EC%96%B4%EA%B0%80%EB%8A%94-%EB%B6%80%EB%B6%84-%EC%88%98%EC%A0%95\" aria-label=\"2 전체 주문 목록에 값이 잘못 들어가는 부분 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 전체 주문 목록에 값이 잘못 들어가는 부분 수정</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 전</span>\r\nallOrderList<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderList<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">//수정 후 </span>\r\nallOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>문제점 : <code class=\"language-text\">getOrDefault(key, defaultValue)</code> 메소드에 기본값을 잘못 입력하여 전체 주문 목록에 값이 한번 더 더해져서 들어가는 상황 발생</li>\n<li>해결방안 : 기본 값을 0으로 변경</li>\n</ul>\n<h2 id=\"3-메소드의-분리\" style=\"position:relative;\"><a href=\"#3-%EB%A9%94%EC%86%8C%EB%93%9C%EC%9D%98-%EB%B6%84%EB%A6%AC\" aria-label=\"3 메소드의 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 메소드의 분리</h2>\n<ul>\n<li>\n<p>현재 상황 : 화면에 안내문구를 출력하는 메소드에서 관련 없는 작업(총 금액 구하기 등..)을 수행함</p>\n</li>\n<li>\n<p>문제점 : 메소드의 역할이 모호해짐</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 전</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아래와 같이 주문하시겠습니까?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Orders ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> maxCount <span class=\"token operator\">=</span> orderList<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token operator\">::</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> <span class=\"token function\">getOrderList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//개수 출력하지 않음</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>orderList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//1개가 아니라면 개수 출력</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token function\">setTotalPrice</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//주문 건 별 총 금액 구하기 : 관련 없는 작업</span>\r\n    <span class=\"token function\">insertAllOrderList</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//주문 품목 전체 리스트에 담기 : 관련 없는 작업</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token function\">setAllTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//전체 주문 금액 구하기 : 관련 없는 작업</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Total Price ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>totalPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 주문     2. 메뉴판\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>해결 방안 : 메소드 안에 관련 없는 작업은 따로 메소드로 분리하여 메소드의 역할과 책임을 구분함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//수정 후 : 관련 없는 메소드 제거</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아래와 같이 주문하시겠습니까?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Orders ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">//장바구니에 동일한 품목이 2개이상일때만 개수 표현을 하기 위해서 최대값을 구함</span>\r\n<span class=\"token keyword\">int</span> maxCount <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token operator\">::</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">//장바구니에 각 품목이 한개씩만 담겼다면</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxCount <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//개수 출력하지 않음</span>\r\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n        product<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//1개가 아니라면 개수 출력</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[ Total Price ]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 주문     2. 메뉴판\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">//관련 있는 작업끼리 모아서 메소드로 분리</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">orderSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> product <span class=\"token operator\">:</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// 전체 주문 목록에 사용자가 현재 주문한 목록 담기</span>\r\n        allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> allOrderMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> product<span class=\"token punctuation\">.</span><span class=\"token function\">getPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getOrderMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">// 전체 총 금액에 사용자가 현재 주문한 총 금액 담기</span>\r\n    <span class=\"token function\">setAllTotalPrice</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">//대기번호 생성</span>\r\n    <span class=\"token keyword\">int</span> waitingNum <span class=\"token operator\">=</span> order<span class=\"token punctuation\">.</span><span class=\"token function\">getWaitingNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"주문이 완료되었습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"대기번호는 [\"</span> <span class=\"token operator\">+</span> waitingNum <span class=\"token operator\">+</span> <span class=\"token string\">\" ]번 입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(3초 후 메뉴판으로 돌아갑니다.)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token comment\">//다음 주문을 위한 주문번호 세팅과 장바구니 초기화</span>\r\n    <span class=\"token function\">resetOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","excerpt":"1, 2차 과제 구현 게시글을 작성하면서 코드의 변화를 기록하기가 어려웠는데, 이번 게시글은 간단하게 작성하기로 하고 깃 커밋내역을 활용하기로 했다😗 3차 구현에서 수정된 부분은 아래와 같다. 1. OrderProcess 클래스 신규 생성 현재 상황 : Order 클래스에서 주문을 처리하기 위한 모든 작업을 진행했음 문제점 : 주문 인스턴스를 위한 멤버들과 주문을 처리하기 위한 멤버들이 혼잡하게 섞여있었다. 해결방안 : Order 클래스에서 주문을 처리하는 부분을 분리하여 OrderProcess 클래스로 신규 생성 결론 : 각각의 클래스가 본인의 역할만 수행하고 있게 된 것 같다. 2. 전체 주문 목록에 값이 잘못 들어가는 부분 수정 문제점 :  메소드에 기본값을 잘못 입력하여 전체 주문 목록에 값이 한번 더 더해져서 들어가는 상황 발생 해결방안 : 기본 값을 0으로 변경 3. 메소드의 분리 현재 상황 : 화면에 안내문구를 출력하는 메소드에서 관련 없는 작업(총 금액 구하기 등..…","frontmatter":{"date":"October 24, 2023","title":"내일배움캠프) JAVA 개인 프로젝트 과제 구현 3차","categories":"내일배움캠프","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/project/java-solo-project3/"}},"next":{"id":"75e370cd-f417-56b4-8ba9-206bef488c38","html":"<h3 id=\"-오늘의-내용정리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC\" aria-label=\" 오늘의 내용정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 오늘의 내용정리</h3>\n<h4 id=\"자바의-메모리-영역\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%9D%98-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%98%81%EC%97%AD\" aria-label=\"자바의 메모리 영역 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바의 메모리 영역</h4>\n<ol>\n<li>static 영역 : 클래스들의 놀이터</li>\n<li>stack 영역 : 메소드들의 놀이터</li>\n<li>heap 영역 : 객체들의 놀이터</li>\n</ol>\n<h4 id=\"객체지향의-4대-특성\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EC%9D%98-4%EB%8C%80-%ED%8A%B9%EC%84%B1\" aria-label=\"객체지향의 4대 특성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체지향의 4대 특성</h4>\n<ol>\n<li><strong>캡</strong>슐화 : 정보은닉</li>\n<li><strong>상</strong>속 : 재사용</li>\n<li><strong>추</strong>상화 : 모델링</li>\n<li><strong>다</strong>형성 : 사용 편의</li>\n</ol>\n<h3 id=\"-오늘의-마무리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 오늘의 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔚 오늘의 마무리</h3>\n<p>개인과제를 마무리하고 시간이 남아서 <a href=\"https://product.kyobobook.co.kr/detail/S000001628116\">스프링 입문을 위한 자바 객체 지향의 원리와 이해</a>의 챕터 2, 3를 읽었다. 이 책은 객체지향을 편안한 어투와 자세한 그림 예시로 친절하게 설명해줘서 좋다. 조금만 집중해서 읽으면 객체지향에 한발짝 더 다가갈 수 있다. 내가 생성한 객체가 어떻게 소멸되는지, 객체지향이 코드에 어떻게 사용되면서 우리에게 편리함을 주는지 쉽게 알 수 있다. 객체지향에 대한 개념이 내 머릿속에서 흐릿해지면 다시 이 책을 꺼내야겠다. (그리고 매번 이 부분만 읽다가 마는데 이번에는 꼭 끝까지 읽어봐야겠다😜)</p>\n<p>개인과제 제출시간이 지나서 해설영상이 공개됐다. 해설영상을 보면서 내 코드에서 고칠 수 있는 부분이 뭐가 있는지 찾아봐야겠다.</p>","frontmatter":{"date":"October 23, 2023","title":"TIL) 20231023","categories":"TIL","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/today-i-learned/20231023/"}},"prev":{"id":"2378b7e9-aea3-5fc9-9aed-8f3c11e2a73c","html":"<h3 id=\"-오늘의-내용정리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC\" aria-label=\" 오늘의 내용정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 오늘의 내용정리</h3>\n<p><a href=\"https://hwana.github.io/naebaecamp/project/java-solo-project3/\">키오스크 만들기 3차</a></p>\n<h3 id=\"-오늘의-마무리\" style=\"position:relative;\"><a href=\"#-%EC%98%A4%EB%8A%98%EC%9D%98-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 오늘의 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔚 오늘의 마무리</h3>\n<p>자바 팀 프로젝트 시작의 날! 팀 프로젝트는 두가지를 선택할 수 있었다. 팀원들을 어느것을 해도 상관이 없다는 의견이 대부분이였다. 그래서 세가지 이유를 들면서 키오스크 프로젝트를 해야 한다고 내 의견을 말했다.</p>\n<ol>\n<li>우리가 개인 과제로 진행했던 코드를 서로 리뷰할 수 있다.</li>\n<li>새로운 프로젝트를 하면 키오스크 프로젝트와 비슷한 내용을 구현해야 하지만, 이미 구현 되어있는 것을 개선 하는거라면 코드 리팩토링을 경험해 볼 수도 있다.</li>\n<li>주말 제외 3.5일이라는 시간내에 구현이 가능할 것 같다.</li>\n</ol>\n<p>다행히 팀원들은 내 의견을 수용해 주었다! 하지만 코드 리뷰와 이미 작성되어 있는 코드들을 병합하는 것은 해본적이 없기에, 튜터님의 도움을 받았다. 튜터님께서는 모든 팀원들의 코드를 병합하기에는 코드 스타일이 다르기 때문에, 각자의 코드를 설명하고 이 프로젝트를 주도적으로 이끌어갈 사람의 코드를 개선하는 방법을 제시해주셨다. 각자 코드 설명을 마치고 내 코드로 개선을 진행하기로 했다.</p>\n<p>현재 내 코드에는 개선할 부분이 많기 때문에 팀원들에게 도움이 되는 코드로 보이지 않았다. 그래서 조금이나마 코드를 개선해보았다..! 항상 코드를 한번 짜면 수정하는게 쉽지 않아서 방치하곤 했는데, 시간을 투자하여 수정을 하니까 뿌듯함이 굉장했다. 일주일이라는 짧은 기간이지만 팀장으로써 팀원들을 잘 이끌어서 프로젝트를 멋있게 마무리하고싶다😊</p>","frontmatter":{"date":"October 24, 2023","title":"TIL) 20231024","categories":"TIL","author":"화나","emoji":"✨"},"fields":{"slug":"/naebaecamp/today-i-learned/20231024/"}},"site":{"siteMetadata":{"siteUrl":"https://www.hwana.com","comments":{"utterances":{"repo":"hwana/hwana.github.io"}}}}},"pageContext":{"slug":"/naebaecamp/project/java-solo-project3/","nextSlug":"/naebaecamp/today-i-learned/20231023/","prevSlug":"/naebaecamp/today-i-learned/20231024/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}