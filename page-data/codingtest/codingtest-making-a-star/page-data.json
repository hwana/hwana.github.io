{"componentChunkName":"component---src-templates-blog-template-js","path":"/codingtest/codingtest-making-a-star/","result":{"data":{"cur":{"id":"83339b9f-c258-569e-8830-e1af842f5cda","html":"<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/87377\">문제</a></p>\n<h3 id=\"문제풀이-흐름\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4-%ED%9D%90%EB%A6%84\" aria-label=\"문제풀이 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제풀이 흐름</h3>\n<ol>\n<li>모든 직선 쌍에 대해서 반복을 진행한다. <br>\r\n1-1. 교점 좌표를 구해서 정수 좌표만 저장하기 <br></li>\n<li>1의 결과에 대해 x, y 좌표의 최댓값, 최솟값 구하기</li>\n<li>2의 결과로 2차원 배열의 크기를 결정하고 배열에 별 표시</li>\n<li>문자열 배열로 반환</li>\n</ol>\n<h3 id=\"풀이\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4\" aria-label=\"풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이</h3>\n<h4 id=\"좌표를-나타내는-클래스-작성\" style=\"position:relative;\"><a href=\"#%EC%A2%8C%ED%91%9C%EB%A5%BC-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9E%91%EC%84%B1\" aria-label=\"좌표를 나타내는 클래스 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좌표를 나타내는 클래스 작성</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>final 사용 이유 ? 데이터를 나타내는 클래스이므로 불변성을 갖게 하기 위해서</li>\n<li>생성자로 초기화 하도록 함</li>\n<li>long으로 표현해야지 오버플로우가 발생하지 않음</li>\n</ul>\n<h4 id=\"모든-직선-쌍에-대해-반복-진행\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EC%A7%81%EC%84%A0-%EC%8C%8D%EC%97%90-%EB%8C%80%ED%95%B4-%EB%B0%98%EB%B3%B5-%EC%A7%84%ED%96%89\" aria-label=\"모든 직선 쌍에 대해 반복 진행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 직선 쌍에 대해 반복 진행</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"교점-좌표-구하는-메소드\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%A0%90-%EC%A2%8C%ED%91%9C-%EA%B5%AC%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"교점 좌표 구하는 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교점 좌표 구하는 메소드</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">intersection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> d<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> f <span class=\"token operator\">-</span> e <span class=\"token operator\">*</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> b <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span> c <span class=\"token operator\">-</span> a <span class=\"token operator\">*</span> f<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> b <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\r\n\r\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"교점-좌표-구해서-정수만-리스트에-저장하기\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%A0%90-%EC%A2%8C%ED%91%9C-%EA%B5%AC%ED%95%B4%EC%84%9C-%EC%A0%95%EC%88%98%EB%A7%8C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0\" aria-label=\"교점 좌표 구해서 정수만 리스트에 저장하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교점 좌표 구해서 정수만 리스트에 저장하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">Point</span> intersection <span class=\"token operator\">=</span> <span class=\"token function\">intersection</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>intersection <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t\tpoints<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>intersection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"저장된-정수-중-최댓값-최솟값-구하기\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EC%9E%A5%EB%90%9C-%EC%A0%95%EC%88%98-%EC%A4%91-%EC%B5%9C%EB%8C%93%EA%B0%92-%EC%B5%9C%EC%86%9F%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0\" aria-label=\"저장된 정수 중 최댓값 최솟값 구하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저장된 정수 중 최댓값, 최솟값 구하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">getMinPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">long</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">long</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">getMaxPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">long</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">long</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">></span> x<span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">Long.MAX_VALUE</code> : Long 범위 내에서 표현할 수 있는 가장 큰 숫자 값으로 초기화</li>\n</ul>\n<h4 id=\"구한-최솟값-최댓값을-이용해서-2차원-배열의-크기-결정\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%95%9C-%EC%B5%9C%EC%86%9F%EA%B0%92-%EC%B5%9C%EB%8C%93%EA%B0%92%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%81%AC%EA%B8%B0-%EA%B2%B0%EC%A0%95\" aria-label=\"구한 최솟값 최댓값을 이용해서 2차원 배열의 크기 결정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구한 최솟값, 최댓값을 이용해서 2차원 배열의 크기 결정</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Point</span> minVal <span class=\"token operator\">=</span> <span class=\"token function\">getMinPoint</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token class-name\">Point</span> maxVal <span class=\"token operator\">=</span> <span class=\"token function\">getMaxPoint</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>좌표를 표현할 수 있는 최소 크기의 2차원 배열을 만들어서 ’.’ 으로 채워준다.</li>\n</ul>\n<h4 id=\"2차원-배열에-좌표-찍기\" style=\"position:relative;\"><a href=\"#2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4%EC%97%90-%EC%A2%8C%ED%91%9C-%EC%B0%8D%EA%B8%B0\" aria-label=\"2차원 배열에 좌표 찍기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2차원 배열에 좌표 찍기</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\tarr<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>2차원 배열에서 (0,0)은 실제 좌표의 (0,0)이 아니므로 좌표를 변환시켜 주어야 한다.</p>\n</li>\n<li>\n<p>[x좌표 - x 좌표 최솟값] 공식으로 좌표를 구한다.</p>\n</li>\n<li>\n<p>y좌표는 좌표의 값을 거꾸로 그려줘야 하기 때문에 [y좌표 최댓값 - y좌표] 공식으로 좌표를 구한다.</p>\n<blockquote>\n<p>함수의 각 좌표를 2차원 배열로 전환하는 과정이 이해가지 않아서 gpt에게 질문해 보았다.<br></p>\n</blockquote>\n<blockquote>\n<p>답변 <br>\r\n코드에서 x = (int) (p.x - minVal.x) 부분은 배열에서의 상대적인 x 좌표를 계산하기 위한 과정입니다.\r\n일반적인 좌표계에서 x 값은 왼쪽에서 오른쪽으로 증가하는 방향을 가리킵니다. 하지만 배열에서는 왼쪽 상단을 (0, 0)으로 시작하여 오른쪽으로 갈수록 x 값이 증가하는 방향입니다.\r\n따라서, 배열에서의 상대적인 x 좌표를 계산하기 위해서는 일반 좌표계와 배열의 시작점 사이의 차이를 고려해야 합니다. <br>\r\np.x - minVal.x를 계산함으로써 x 좌표를 보정하여 배열에서의 상대적인 위치를 나타냅니다. <br>\r\n<br>\r\n주어진 코드에서는 배열의 좌표 변환 시에 maxVal.y - p.y를 사용하는데, 이는 좌표 변환에 대한 방법을 나타내기 위한 공식입니다. 정확히는 <strong>배열의 y축 방향이 일반적인 좌표계와 반대로 되어있어서 이를 보정하기 위한 과정</strong>입니다. <br>\r\n일반적인 좌표계에서는 y 값이 위로 증가하는 방향을 가리키지만, 배열에서는 y 값이 아래로 증가하는 방향을 가리킵니다. 따라서, y 값을 배열에 맞게 변환하기 위해서는 maxVal.y - p.y를 사용하여 보정해야 합니다. 이렇게 함으로써 배열에서의 y 값은 일반적인 좌표계에서의 y 값과 일치하게 됩니다.</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"문자열-배열로-변환-후반환\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98-%ED%9B%84%EB%B0%98%ED%99%98\" aria-label=\"문자열 배열로 변환 후반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 배열로 변환 후반환</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\tresult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"최종코드\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\" aria-label=\"최종코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> line<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\r\n\t\t<span class=\"token comment\">//교점 중 정수인 좌표를 담는 리스트</span>\r\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token comment\">//모든 직선쌍에 대해서 반복</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                <span class=\"token class-name\">Point</span> intersection <span class=\"token operator\">=</span> <span class=\"token function\">intersection</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>intersection <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                    points<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>intersection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token class-name\">Point</span> minVal <span class=\"token operator\">=</span> <span class=\"token function\">getMinPoint</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">Point</span> maxVal <span class=\"token operator\">=</span> <span class=\"token function\">getMaxPoint</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span>height<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> row <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> minVal<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>maxVal<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\tarr<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> answer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">getMinPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">long</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">long</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> x<span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;</span> y<span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">getMaxPoint</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Point</span><span class=\"token punctuation\">></span></span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">long</span> x <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">long</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Point</span> p <span class=\"token operator\">:</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x <span class=\"token operator\">></span> x<span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>y <span class=\"token operator\">></span> y<span class=\"token punctuation\">)</span> y <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\r\n\t<span class=\"token comment\">//교점 중 정수를 골라서 담는 메소드</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Point</span> <span class=\"token function\">intersection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> a1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> b1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> c1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> a2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> b2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">*</span> c2 <span class=\"token operator\">-</span> c1 <span class=\"token operator\">*</span> b2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">*</span> b2 <span class=\"token operator\">-</span> b1 <span class=\"token operator\">*</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>c1 <span class=\"token operator\">*</span> a2 <span class=\"token operator\">-</span> a1 <span class=\"token operator\">*</span> c2<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>a1 <span class=\"token operator\">*</span> b2 <span class=\"token operator\">-</span> b1 <span class=\"token operator\">*</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token comment\">//좌표를 나타내는 클래스</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4-%ED%9D%90%EB%A6%84\">문제풀이 흐름</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%92%80%EC%9D%B4\">풀이</a></p>\n<ul>\n<li><a href=\"#%EC%A2%8C%ED%91%9C%EB%A5%BC-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9E%91%EC%84%B1\">좌표를 나타내는 클래스 작성</a></li>\n<li><a href=\"#%EB%AA%A8%EB%93%A0-%EC%A7%81%EC%84%A0-%EC%8C%8D%EC%97%90-%EB%8C%80%ED%95%B4-%EB%B0%98%EB%B3%B5-%EC%A7%84%ED%96%89\">모든 직선 쌍에 대해 반복 진행</a></li>\n<li><a href=\"#%EA%B5%90%EC%A0%90-%EC%A2%8C%ED%91%9C-%EA%B5%AC%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\">교점 좌표 구하는 메소드</a></li>\n<li><a href=\"#%EA%B5%90%EC%A0%90-%EC%A2%8C%ED%91%9C-%EA%B5%AC%ED%95%B4%EC%84%9C-%EC%A0%95%EC%88%98%EB%A7%8C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B8%B0\">교점 좌표 구해서 정수만 리스트에 저장하기</a></li>\n<li><a href=\"#%EC%A0%80%EC%9E%A5%EB%90%9C-%EC%A0%95%EC%88%98-%EC%A4%91-%EC%B5%9C%EB%8C%93%EA%B0%92-%EC%B5%9C%EC%86%9F%EA%B0%92-%EA%B5%AC%ED%95%98%EA%B8%B0\">저장된 정수 중 최댓값, 최솟값 구하기</a></li>\n<li><a href=\"#%EA%B5%AC%ED%95%9C-%EC%B5%9C%EC%86%9F%EA%B0%92-%EC%B5%9C%EB%8C%93%EA%B0%92%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%81%AC%EA%B8%B0-%EA%B2%B0%EC%A0%95\">구한 최솟값, 최댓값을 이용해서 2차원 배열의 크기 결정</a></li>\n<li><a href=\"#2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4%EC%97%90-%EC%A2%8C%ED%91%9C-%EC%B0%8D%EA%B8%B0\">2차원 배열에 좌표 찍기</a></li>\n<li><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98-%ED%9B%84%EB%B0%98%ED%99%98\">문자열 배열로 변환 후반환</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\">최종코드</a></p>\n</li>\n</ul>\n</div>","excerpt":"문제 문제풀이 흐름 모든 직선 쌍에 대해서 반복을 진행한다. \r\n1-1. 교점 좌표를 구해서 정수 좌표만 저장하기  1의 결과에 대해 x, y 좌표의 최댓값, 최솟값 구하기 2의 결과로 2차원 배열의 크기를 결정하고 배열에 별 표시 문자열 배열로 반환 풀이 좌표를 나타내는 클래스 작성 final 사용 이유 ? 데이터를 나타내는 클래스이므로 불변성을 갖게 하기 위해서 생성자로 초기화 하도록 함 long으로 표현해야지 오버플로우가 발생하지 않음 모든 직선 쌍에 대해 반복 진행 교점 좌표 구하는 메소드 교점 좌표 구해서 정수만 리스트에 저장하기 저장된 정수 중 최댓값, 최솟값 구하기  : Long 범위 내에서 표현할 수 있는 가장 큰 숫자 값으로 초기화 구한 최솟값, 최댓값을 이용해서 2차원 배열의 크기 결정 좌표를 표현할 수 있는 최소 크기의 2차원 배열을 만들어서 ’.’ 으로 채워준다. 2차원 배열에 좌표 찍기 2차원 배열에서 (0,0)은 실제 좌표의 (0,0)이 아니므로 좌표를 변…","frontmatter":{"date":"June 03, 2023","title":"교점에 별 만들기","categories":"프로그래머스","author":"화나","emoji":"💻"},"fields":{"slug":"/codingtest/codingtest-making-a-star/"}},"next":{"id":"09cb1bed-0ae4-5f1d-9d03-9e2536cccd59","html":"<h2 id=\"상속\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D\" aria-label=\"상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속</h2>\n<p>기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>상속을 받는다는 것은 상위 클래스를 확장(extends)한다는 의미로 해석된다.</li>\n<li>하위 클래스는 상위클래스의 생성자, 초기화 블럭을 제외한 모든 멤버를 모두 상속받는다.</li>\n<li>상위 클래스가 변경되면 모든 하위 클래스는 자동으로 영향을 받지만, 하위 클래스가 변경되는 것은 상위 클래스에 아무런 영향이 없다.</li>\n</ul>\n<h3 id=\"포함관계\" style=\"position:relative;\"><a href=\"#%ED%8F%AC%ED%95%A8%EA%B4%80%EA%B3%84\" aria-label=\"포함관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>포함관계</h3>\n<p>상속 이외에도 클래스를 재사용하는 다른 방법, 한 클래스의 멤버변수로 다른 클래스 타입의 참조 변수를 선언하는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">int</span> y<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">Point</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"단일상속\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9D%BC%EC%83%81%EC%86%8D\" aria-label=\"단일상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단일상속</h3>\n<p>자바에서는 단일 상속만 허용한다.</p>\n<h3 id=\"object-클래스\" style=\"position:relative;\"><a href=\"#object-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"object 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object 클래스</h3>\n<p>Object 클래스는 모든 클래스의 상위 클래스이다.</p>\n<p>다른 클래스로부터 상속 받지 않는 모든 클래스들은 자동으로 Object 클래스를 상속받는다.</p>\n<h3 id=\"오버라이딩\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"오버라이딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오버라이딩</h3>\n<p>상위 클래스로부터 상속받은 메소드의 내용을 변경하는 것, 상속받은 메소드를 그대로 사용하기도 하지만 필요에 따라 변경을 해야하는 경우 상위 클래스의 메소드를 오버라이딩 한다.</p>\n<h4 id=\"오버라이딩의-조건\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9%EC%9D%98-%EC%A1%B0%EA%B1%B4\" aria-label=\"오버라이딩의 조건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오버라이딩의 조건</h4>\n<ol>\n<li>이름, 매개변수, 반환타입이 같아야 한다.</li>\n<li>접근제어자는 상위 클래스의 메소드보다 좁은 범위로 변경할 수 없다.</li>\n<li>상위 클래스의 메소드보다 많은 수의 예외를 선언할 수 없다.</li>\n</ol>\n<h3 id=\"super\" style=\"position:relative;\"><a href=\"#super\" aria-label=\"super permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>super</h3>\n<p>super는 하위 클래스에서 상속받은 멤버를 참조하는데 사용되는 참조변수이다.</p>\n<p>멤버변수와 지역변수의 이름이 같을 때 this를 붙여서 구분했듯이 상속받은 멤버와 자신이 가지고 있는 멤버의 이름이 같을 때 super를 사용해서 구분할 수 있다.</p>\n<h3 id=\"super-1\" style=\"position:relative;\"><a href=\"#super-1\" aria-label=\"super 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>super()</h3>\n<p>this()는 같은 클래스의 다른 생성자를 호출하는데 사용된다면, super()는 상위 클래스의 생성자를 호출하는데 사용된다.</p>\n<p>Object클래스를 제외한 모든 클래스의 생성자 첫 줄에 this() 또는 super()를 호출해야 한다. 그렇지 않으면 컴파일러가 자동적으로 super()를 생성자의 첫 줄에 삽입한다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%83%81%EC%86%8D\">상속</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%8F%AC%ED%95%A8%EA%B4%80%EA%B3%84\">포함관계</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A8%EC%9D%BC%EC%83%81%EC%86%8D\">단일상속</a></p>\n</li>\n<li>\n<p><a href=\"#object-%ED%81%B4%EB%9E%98%EC%8A%A4\">Object 클래스</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\">오버라이딩</a></p>\n<ul>\n<li><a href=\"#%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9%EC%9D%98-%EC%A1%B0%EA%B1%B4\">오버라이딩의 조건</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#super\">super</a></p>\n</li>\n<li>\n<p><a href=\"#super-1\">super()</a></p>\n</li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 03, 2023","title":"상속","categories":"자바 자바의정석","author":"화나","emoji":"📚"},"fields":{"slug":"/java/java-extends/"}},"prev":{"id":"551d4818-0017-5790-ac64-36c9ff204ef8","html":"<p>클래스, 변수, 메소드의 선언부에 함께 사용되어 부가적인 의미를 부여한다.</p>\n<p>제어자는 접근 제어자와 그 외 제어자로 나눌 수 있는데, 접근 제어자는 선언부에 하나만 쓸 수 있으며, 그 외 제어자는 조합하여 사용이 가능하다.</p>\n<h3 id=\"static---클래스의-공통적인\" style=\"position:relative;\"><a href=\"#static---%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%81%EC%9D%B8\" aria-label=\"static   클래스의 공통적인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>static - 클래스의, 공통적인</h3>\n<p>static이 사용될 수 있는 곳 : 멤버변수, 메소드, 초기화 블럭</p>\n<ul>\n<li>멤버변수에 static이 붙는다면\n<ul>\n<li>모든 인스턴스에 공통적으로 사용되는 클래스 변수며, 인스턴스를 생성하지 않고도 사용이 가능하다.</li>\n<li>클래스가 메모리에 로드될 때 생성된다.</li>\n</ul>\n</li>\n<li>메소드에 static이 붙는다면?\n<ul>\n<li>인스턴스를 생성하지 않고도 사용 가능한 클래스 메소드가 된다.</li>\n<li>클래스 메소드 내에서는 인스턴스 멤버들을 사용할 수 없다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"final---마지막의-변경될-수-없는\" style=\"position:relative;\"><a href=\"#final---%EB%A7%88%EC%A7%80%EB%A7%89%EC%9D%98-%EB%B3%80%EA%B2%BD%EB%90%A0-%EC%88%98-%EC%97%86%EB%8A%94\" aria-label=\"final   마지막의 변경될 수 없는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>final - 마지막의, 변경될 수 없는</h3>\n<p>final이 사용될 수 있는 곳 : 클래스, 메소드, 멤버변수, 지역변수</p>\n<ul>\n<li>클래스에 final이 붙는다면\n<ul>\n<li>확장될 수 없다. 즉 다른 클래스의 조상이 될수 없고 상속 구조에서 제일 마지막 클래스이다.</li>\n</ul>\n</li>\n<li>메소드에 final이 붙는다면\n<ul>\n<li>변경될 수 없으므로 오버라이딩이 될 수 없다.</li>\n</ul>\n</li>\n<li>멤버변수와 지역변수에 final이 붙는다면\n<ul>\n<li>변경할 수 없는 상수가 된다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"abstract---추상의-미완성의\" style=\"position:relative;\"><a href=\"#abstract---%EC%B6%94%EC%83%81%EC%9D%98-%EB%AF%B8%EC%99%84%EC%84%B1%EC%9D%98\" aria-label=\"abstract   추상의 미완성의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>abstract - 추상의, 미완성의</h3>\n<p>abstract가 사용될 수 있는 곳 : 클래스, 메소드</p>\n<ul>\n<li>클래스에 abstract가 붙는다면\n<ul>\n<li>클래스 내에 추상 메소드가 선언되어 있음을 의미한다.</li>\n</ul>\n</li>\n<li>메소드에 abstract가 붙는다면\n<ul>\n<li>추상메소드임을 의미한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"접근-제어자\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EC%A0%9C%EC%96%B4%EC%9E%90\" aria-label=\"접근 제어자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 제어자</h3>\n<ul>\n<li>private : 같은 클래스 내에서만 접근이 가능하다.</li>\n<li>default : 같은 패키지 내에서만 접근이 가능하다.</li>\n<li>protected : 같은 패키지 내에서, 다른 패키지의 자손 클래스에서 접근이 가능하다.\n<ul>\n<li>패키지에 관계없이 상속관계에 있는 자손클래스에서 접근할 수 있도록 제한 하는것이 목적이지만, 같은 패키지 내에서도 접근이 가능하다.</li>\n</ul>\n</li>\n<li>public : 접근 제한이 없다.</li>\n</ul>\n<h4 id=\"접근-제어자를-이용한-캡슐화\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EC%A0%9C%EC%96%B4%EC%9E%90%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%BA%A1%EC%8A%90%ED%99%94\" aria-label=\"접근 제어자를 이용한 캡슐화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 제어자를 이용한 캡슐화</h4>\n<p>접근 제어자를 사용하는 이유는 클래스 내부에 선언된 데이터를 보호하기 위해서이다.</p>\n<p>멤버변수의 접근자를 private로 선언하여 외부에서 쉽게 접근하지 못하게 할 수 있다.</p>\n<h4 id=\"생성자의-접근제어자\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%9E%90\" aria-label=\"생성자의 접근제어자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자의 접근제어자</h4>\n<p>생성자에 접근제어자를 사용함으로써 인스턴스의 생성을 제한할 수 있다.</p>\n<h4 id=\"제어자를-조합해서-사용할-때-주의해야할-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EC%9E%90%EB%A5%BC-%EC%A1%B0%ED%95%A9%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C-%EC%A3%BC%EC%9D%98%ED%95%B4%EC%95%BC%ED%95%A0-%EC%82%AC%ED%95%AD\" aria-label=\"제어자를 조합해서 사용할 때 주의해야할 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어자를 조합해서 사용할 때 주의해야할 사항</h4>\n<ol>\n<li>메소드에 static과 abstract는 동시에 사용할 수 없다.\n<ol>\n<li>static은 구현부가 있는 메소드에만 사용할 수 있다.</li>\n</ol>\n</li>\n<li>클래스에는 abstract와 final을 동시에 사용할 수 없다.\n<ol>\n<li>서로 모순되는 제어자이기 때문이다.</li>\n</ol>\n</li>\n<li>abstract메소드의 접근제어자가 private일 수 없다.\n<ol>\n<li>접근제어자가 private이면 자손 클래스에서 접근할 수 없기 때문이다.</li>\n</ol>\n</li>\n<li>메소드에 private과 final을 같이 사용할 필요는 없다.\n<ol>\n<li>접근제어자가 private 메소드는 오버라이딩 될 수 없기때문에 이 둘 중 하나만 사용해도 의미가 충분하다.</li>\n</ol>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#static---%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EA%B3%B5%ED%86%B5%EC%A0%81%EC%9D%B8\">static - 클래스의, 공통적인</a></p>\n</li>\n<li>\n<p><a href=\"#final---%EB%A7%88%EC%A7%80%EB%A7%89%EC%9D%98-%EB%B3%80%EA%B2%BD%EB%90%A0-%EC%88%98-%EC%97%86%EB%8A%94\">final - 마지막의, 변경될 수 없는</a></p>\n</li>\n<li>\n<p><a href=\"#abstract---%EC%B6%94%EC%83%81%EC%9D%98-%EB%AF%B8%EC%99%84%EC%84%B1%EC%9D%98\">abstract - 추상의, 미완성의</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%91%EA%B7%BC-%EC%A0%9C%EC%96%B4%EC%9E%90\">접근 제어자</a></p>\n<ul>\n<li><a href=\"#%EC%A0%91%EA%B7%BC-%EC%A0%9C%EC%96%B4%EC%9E%90%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%BA%A1%EC%8A%90%ED%99%94\">접근 제어자를 이용한 캡슐화</a></li>\n<li><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%9E%90\">생성자의 접근제어자</a></li>\n<li><a href=\"#%EC%A0%9C%EC%96%B4%EC%9E%90%EB%A5%BC-%EC%A1%B0%ED%95%A9%ED%95%B4%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C-%EC%A3%BC%EC%9D%98%ED%95%B4%EC%95%BC%ED%95%A0-%EC%82%AC%ED%95%AD\">제어자를 조합해서 사용할 때 주의해야할 사항</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 13, 2023","title":"제어자","categories":"자바 자바의정석","author":"화나","emoji":"📚"},"fields":{"slug":"/java/java-modifier/"}},"site":{"siteMetadata":{"siteUrl":"https://www.hwana.com","comments":{"utterances":{"repo":"hwana/hwana.github.io"}}}}},"pageContext":{"slug":"/codingtest/codingtest-making-a-star/","nextSlug":"/java/java-extends/","prevSlug":"/java/java-modifier/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}