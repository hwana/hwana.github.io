{"componentChunkName":"component---src-templates-blog-template-js","path":"/test4/","result":{"data":{"cur":{"id":"d90e4aa3-5d74-5c91-9891-2cbf54e2ccf9","html":"<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/118666\">문제</a></p>\n<h3 id=\"내-최종코드\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\" aria-label=\"내 최종코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 최종코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> survey<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> choices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">String</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"RT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CF\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JM\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AN\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> survey<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\r\n            <span class=\"token comment\">//기준점에 되는 4에서 뺀 결과값을 절대값 처리</span>\r\n            <span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token comment\">//choices가 4보다 작다면 survey의 앞글자(비동의), 4보다 크다면 survey의 뒷글자(동의)</span>\r\n            <span class=\"token class-name\">Character</span> c <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">></span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> survey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> survey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n            <span class=\"token comment\">//map에 이미 문자가 있다면 해당 문자에 점수를 더해주고, 아니면 문자와 점수를 넣어준다.</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\r\n                map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">//고정된 배열인 arr을 활용하여 각 지표의 점수를 비교한다.</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n                answer <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\r\n                answer <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"다른사람-풀이-참고-후-수정코드\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4-%EC%B0%B8%EA%B3%A0-%ED%9B%84-%EC%88%98%EC%A0%95%EC%BD%94%EB%93%9C\" aria-label=\"다른사람 풀이 참고 후 수정코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른사람 풀이 참고 후 수정코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> survey<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> choices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">String</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token class-name\">Character</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'J'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n        <span class=\"token comment\">//map 초기화</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">//해당 문자가 있는지 없는지 판단하는 if문이 빠지게 된다.</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> survey<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token class-name\">Character</span> choice <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">></span> choices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> survey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> survey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">//getOrDefault메소드를 get메소드로 변경할 수 있다.</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            answer <span class=\"token operator\">+=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> c<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>map을 초기화 해주면 map에 해당 문자가 있는지 없는지 판단하는 코드가 줄어들게 된다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%82%B4-%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\">내 최종코드</a></p>\n<ul>\n<li><a href=\"#%EB%8B%A4%EB%A5%B8%EC%82%AC%EB%9E%8C-%ED%92%80%EC%9D%B4-%EC%B0%B8%EA%B3%A0-%ED%9B%84-%EC%88%98%EC%A0%95%EC%BD%94%EB%93%9C\">다른사람 풀이 참고 후 수정코드</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"문제 내 최종코드 다른사람 풀이 참고 후 수정코드 map을 초기화 해주면 map에 해당 문자가 있는지 없는지 판단하는 코드가 줄어들게 된다. 내 최종코드 다른사람 풀이 참고 후 수정코드","frontmatter":{"date":"June 21, 2023","title":"성격 유형 검사하기","categories":"프로그래머스","author":"화나","emoji":"💻"},"fields":{"slug":"/test4/"}},"next":{"id":"0fed48ca-f55b-5294-8100-88aa627fdd1e","html":"<h2 id=\"다형성\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1\" aria-label=\"다형성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다형성</h2>\n<p>상위 클래스 타입의 참조변수로 하위 클래스의 인스턴스를 참조할 수 있도록 하는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Tv</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">boolean</span> power<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">int</span> channel<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">power</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\tpower <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>power<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">channelUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token operator\">++</span>channel<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">channelDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token operator\">--</span>channel<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CaptionTv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Tv</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token class-name\">String</span> text<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">void</span> <span class=\"token class-name\">Caption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>두 클래스가 상속관계에 있을 때 상위 클래스 타입의 참조변수로 하위 클래스의 인스턴스를 참조하도록 할 수 있다.\n<ul>\n<li><code class=\"language-text\">Tv t = new CaptionTv();</code></li>\n<li>참조변수 t로는 Tv클래스의 멤버들만 사용할 수 있다.</li>\n<li>참조변수의 타입이 참조변수가 참조하고 있는 인스턴스에서 사용할 수 있는 멤버의 갯수를 결정한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"참조변수와-인스턴스의-연결\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%9D%98-%EC%97%B0%EA%B2%B0\" aria-label=\"참조변수와 인스턴스의 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조변수와 인스턴스의 연결</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BindingTest</span><span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">Parent</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">Child</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p.x = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c.x = \"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parent Method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Child Method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>메소드의 경우 실제 인스턴스의 메소드가 호출되지만 멤버변수의 경우 참조변수 타입에 따라 달라진다. 참조변수의 타입에 따라 결과가 달라지는 경우는 상위 클래스의 멤버변수와 같은 이름의 멤버변수를 하위클래스에 중복해서 정의한 경우 뿐이다.</li>\n<li>메소드인 method()의 경우 참조변수의 타입에 관계없이 항상 실제 인스턴스 타입인 Child 클래스에 정의된 메소드가 호출되지만, 인스턴스변수인 x의 경우 참조변수 타입에 따라서 달라진다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BindingTest2</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">Parent</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">Child</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p.x = \"</span> <span class=\"token operator\">+</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c.x = \"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parent Method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Parent</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>해당 예시는 Child 클래스에 아무런 멤버도 정의되어 있지 않기 때문에 참조변수 타입이 다르더라도 항상 상위 클래스의 멤버를 사용하게 된다.</li>\n</ul>\n<h3 id=\"매개변수의-다형성\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EC%9D%98-%EB%8B%A4%ED%98%95%EC%84%B1\" aria-label=\"매개변수의 다형성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매개변수의 다형성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> price<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 제품의 가격</span>\r\n\t<span class=\"token keyword\">int</span> bonusPoint<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// 제품구매 시 제공하는 보너스점수</span>\r\n\r\n\t<span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span>\r\n\t\tbonusPoint <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>price<span class=\"token operator\">/</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 보너스점수는 제품가격의 10%</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Tv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token class-name\">Tv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token comment\">// 조상클래스의 생성자 Product(int price)를 호출한다.</span>\r\n\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// Tv의 가격을 100만원으로 한다.</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\t<span class=\"token comment\">// Object클래스의 toString()을 오버라이딩한다.</span>\r\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Tv\"</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Computer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Product</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token class-name\">Computer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\r\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Computer\"</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Buyer</span> <span class=\"token punctuation\">{</span>\t\t\t<span class=\"token comment\">// 고객, 물건을 사는 사람</span>\r\n\t<span class=\"token keyword\">int</span> money <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 소유금액</span>\r\n\t<span class=\"token keyword\">int</span> bonusPoint <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 보너스점수</span>\r\n\r\n\t<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token keyword\">void</span> <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Product</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>money <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"잔액이 부족하여 물건을 살수 없습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\r\n\t\tmoney <span class=\"token operator\">-=</span> p<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">// 가진 돈에서 구입한 제품의 가격을 뺀다.</span>\r\n\t\tbonusPoint <span class=\"token operator\">+=</span> p<span class=\"token punctuation\">.</span>bonusPoint<span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 제품의 보너스 점수를 추가한다.</span>\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">+</span> <span class=\"token string\">\"을/를 구입하셨습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PolyArgumentTest</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token class-name\">Buyer</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buyer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t\t<span class=\"token operator\">*</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Tv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\tb<span class=\"token punctuation\">.</span><span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Computer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>\r\n\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재 남은 돈은 \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>money <span class=\"token operator\">+</span> <span class=\"token string\">\"만원입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재 보너스점수는 \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>bonusPoint <span class=\"token operator\">+</span> <span class=\"token string\">\"점입니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>매개변수가 Product타입의 참조변수라는 것은, 메소드의 매개변수로 Product클래스의 하위 클래스 타입의 참조변수면 어느 것이나 매개변수르 받아들일 수 있다는 뜻이다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%8B%A4%ED%98%95%EC%84%B1\">다형성</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EC%A1%B0%EB%B3%80%EC%88%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%9D%98-%EC%97%B0%EA%B2%B0\">참조변수와 인스턴스의 연결</a></li>\n<li><a href=\"#%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EC%9D%98-%EB%8B%A4%ED%98%95%EC%84%B1\">매개변수의 다형성</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 20, 2023","title":"다형성","categories":"자바 자바의정석","author":"화나","emoji":"📚"},"fields":{"slug":"/polymorphism/"}},"prev":{"id":"fb5a7d14-a539-5c45-9be3-f0a5f8faaf29","html":"<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/92334\">문제</a></p>\n<h3 id=\"내-최종코드\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\" aria-label=\"내 최종코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 최종코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> id_list<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> report<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>id_list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//결과값 반환 배열</span>\r\n        <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> hashSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//신고 결과에서 중복값을 제거한 hastSet</span>\r\n\r\n        <span class=\"token comment\">//신고받은 결과</span>\r\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> complaintMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> hashSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">String</span> id <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//신고받은 id</span>\r\n            complaintMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> complaintMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//신고받은 횟수</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token comment\">//신고한 결과</span>\r\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> resultMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> hashSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token class-name\">String</span> fromId <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//신고한 id</span>\r\n            <span class=\"token class-name\">String</span> toId <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//신고받은 id</span>\r\n\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>complaintMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>toId<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>    <span class=\"token comment\">//신고받은 횟수가 k회 이상이라면</span>\r\n                resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>fromId<span class=\"token punctuation\">,</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>fromId<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">//id를 담고있는 배열 순서대로 answer에 결과값 넣기</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> id <span class=\"token operator\">:</span> id_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            answer<span class=\"token punctuation\">[</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> resultMap<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%82%B4-%EC%B5%9C%EC%A2%85%EC%BD%94%EB%93%9C\">내 최종코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 25, 2023","title":"신고 결과 받기","categories":"프로그래머스","author":"화나","emoji":"💻"},"fields":{"slug":"/test5/"}},"site":{"siteMetadata":{"siteUrl":"https://www.hwana.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/test4/","nextSlug":"/polymorphism/","prevSlug":"/test5/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}