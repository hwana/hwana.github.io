{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/스진초","result":{"pageContext":{"currentCategory":"스진초","categories":["All","스진초","자바","프로그래머스","자바의정석"],"edges":[{"node":{"id":"526ec4d9-c8e4-5833-bb4c-7660bfe99217","excerpt":"오늘도 역시나 내 머리속에 있고 나 혼자서는 응~그치그치~ 하면서 이해할 수 있는 내용이지만, 남에게 설명하려면 입이 안 떨어지고 어버버하게되는 그런 과제였다. 그 과제가 뭐냐구요..? 인터페이스가 가지고 있는 객체 지향의 특징에는 어떤 것이 있는지 그렇게 생각하는 이유는 무엇인지 자! 오늘도 머리에 있는걸 열심히 끄집어 내보자🤯\r\n 내 머릿속에 있는 생각 객체지향의 특징에는 캡슐화, 추상화, 다형성, 상속이 있다. 인터페이스는 이 속성들 4가지를 모두 가지고 있다고 생각한다. 캡슐화 인터페이스는 상수와 추상메소드만을 가질 수 있다. 추상메소드만을 가질 수 있다는 것은 메소드의 구현을 클래스에게 위임하였다는 뜻으로, 각 기능의 정의와 구현을 분리하여 캡슐화를 한 것이다. 추상화 인터페이스는 공통된 기능을 추출해서 정의한 것이기 때문에 추상화 되었다. 다형성 인터페이스를 구현한 클래스라면, 인스턴스의 참조변수 타입을 인터페이스로 할 수있다. 상속 인터페이스도 인터페이스를 상속받을 수…","fields":{"slug":"/spring2/"},"frontmatter":{"categories":"스진초 자바","title":"과제2) 인터페이스요..?","date":"July 25, 2023"}},"next":{"fields":{"slug":"/spring1/"}},"previous":null},{"node":{"id":"4a83eb23-6d09-5f64-b2c0-97c6af5eb5fe","excerpt":"어제 첫 라이브 세션을 시작으로 스진초 과정이 시작되었다!\r\n프로그래밍은 외우는 것이 아니라 생각하고 이해하면서 해야한다고 말씀해주셨는데, 첫 과제부터 스진초의 정체성이 잘 나타나는거 같다. 내가 생각하는 캡슐화, 추상화, 다형성, 상속성 최근에 자바의 정석을 읽으면서 내용정리를 했기때문에 과제를 보고 ‘ㅎ..할만하군..’ 이라고 생각했다. 하지만 지금 이 글을 적는 이 순간 머리속에 있는 꺼내려고 하니까 쉽지않다. 그래도 최대한 적어봐야지..! 캡슐화 데이터의 무분별한 변경을 방지하기 위해서 접근제어자를 private으로 선언하여 외부의 접근을 막는 방식 추상화 추상 클래스를 상속받은 하위 클래스에게 메소드의 작성을 위임하는 방식 다형성 상위 클래스의 타입으로 하위 클래스의 인스턴스를 참조할 수 있도록 하는 방식 상속 공통된 속성을 모아놓은 클래스(상위 클래스)를 확장하여 새로운 클래스(하위 클래스)를 정의하는 방식 구글링으로 알아낸 캡슐화, 추상화, 다형성, 상속성 캡슐화 변수…","fields":{"slug":"/spring1/"},"frontmatter":{"categories":"스진초 자바","title":"과제1) 나만의 언어로 객체 지향의 특징 설명하기","date":"July 24, 2023"}},"next":{"fields":{"slug":"/test14/"}},"previous":{"fields":{"slug":"/spring2/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}