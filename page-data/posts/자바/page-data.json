{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/자바","result":{"pageContext":{"currentCategory":"자바","categories":["All","자바","자바의정석"],"edges":[{"node":{"id":"08257061-5102-5c08-81e5-ec0e1d5533e8","excerpt":"클래스 클래스란 객체를 정의해 놓은 것이며, 객체를 생성하는데 사용된다.\r\n클래스를 잘 만들어 놓으면 객체를 생성할 때마다 고민을 할 필요가 없으며, 만들어 놓은 클래스로부터 객체를 생성해서 사용하기만 하면 된다. 우리는 JDK에서 제공하는 클래스들을 이용해서 쉽게 프로그램을 작성할 수 있다. 클래스의 또 다른 정의 데이터와 함수의 결합\r\n함수와 데이터는 관계가 깊기 때문에 자바에서는 변수와 함수를 하나의 클래스에 정의하여 관계가 깊은 변수와 함수를 함께 다룰 수 있게했다. 사용자 정의 타입\r\n사용자 정의 타입은 사용자가 기능 동작을 위한 데이터와 함수를 묶어서 정의하는 것이다. 객체 객체는 클래스의 정의된 내용대로 메모리에 생성된 것이다.\r\n클래스로부터 객체를 만드는 것을 클래스의 인스턴스화라고 하며, 어떤 클래스로부터 만들어진 객체를 그 클래스의 인스턴스라고 한다.\r\n객체는 포괄적인 의미를 가지고 있다면, 인스턴스는 객체보다 구체적인 의미인 어떤 클래스로부터 만들어진 것인지를 …","fields":{"slug":"/class-instance/"},"frontmatter":{"categories":"자바 자바의정석","title":"클래스, 메소드, 변수, 인스턴스, 객체","date":"May 27, 2023"}},"next":{"fields":{"slug":"/recursive-call/"}},"previous":null},{"node":{"id":"8a3e4e0a-9551-542d-a053-6cf939cbb8f1","excerpt":"메소드 내부에서 메소드 자신을 다시 호출하는 것 어떻게 메소드가 자기 자신을 호출할 수 있는걸까? 메소드 입장에서는 자기 자신을 호출하는 것과 다른 메소드를 호출하는 것은 차이가 없다. ‘메소드 호출’ 이라는 것이 특정 위치에 저장되어 있는 명령들을 수행하는 것일 뿐이기 때문 호출된 메소드는 원래의 값이 아닌 복사된 값으로 작업하기 때문에 호출한 메소드와 관계없이 독립적인 작업 수행이 가능하다 :  재귀호출과 반복문 재귀호출은 반복문과 유사한 점이 많으며, 대부분의 재귀호출은 반복문으로 작성하는것이 가능하다.\r\n어떤 작업을 반복적으로 처리해야한다면, 먼저 반복문으로 작성해보고 너무 복잡하다면 재귀호출로 간단하게 할 수 없는지 고민해봐야한다.\r\n반복문보다 재귀호출이 비효율적이므로 재귀호출에 드는 비용보다 재귀호출의 간결함이 주는 이득이 충분히 큰 경우에만 사용해야한다. 대표적인 재귀호출 : 팩토리얼 팩토리얼은 한 숫자가 1이 될 때까지 1씩 감소시켜가면서 계속해서 곱해 나가는 것  …","fields":{"slug":"/recursive-call/"},"frontmatter":{"categories":"자바 자바의정석","title":"재귀호출","date":"May 27, 2023"}},"next":{"fields":{"slug":"/basic-reference-parameter/"}},"previous":{"fields":{"slug":"/class-instance/"}}},{"node":{"id":"e4d51ea6-02b5-5a40-9cd7-efd3dd8c07e2","excerpt":"매개변수의 타입이 기본형일 때는 값이 복사되어서 변수의 값을 읽는 것만 가능하다.\r\n참조형일 때는 인스턴스의 주소가 복사되어서 변수의 값을 읽고 변경할 수 있다. 기본형 매개변수 호출한 메소드에 기본형 매개변수가 선언되어 있는 경우 인자(d.x)의 값을 복사하여 넘겨준 것 호출한 메소드에서 값을 1000으로 변경하더라도 호출한 메소드의 매개변수 값만 변경 될 뿐, 인자로 넘겨준 변수는 영향을 받지 않는다.\r\n 참조형 매개변수 호출된 메소드에 참조형 매개변수가 선언되어 있는 경우 값이 저장된 주소를 호출된 메소드에 넘겨준다. 호출된 메소드의 매개변수가 넘겨받은 인자와 같은 주소값을 가리키고 있기 때문에 호출된 메소드에서 값을 변경하게되면 그 주소값을 가지고 있는 변수의 값이 변경된다.\r\n 참조형 반환타입 copy메소드에서 생성한 객체를 main메소드에서 사용하려면 copy메소드 내에서 생성한 객체의 주소를 반환해주어야 한다. 그렇지 않으면 copy메소드가 종료되면서 생성한 객체의 참…","fields":{"slug":"/basic-reference-parameter/"},"frontmatter":{"categories":"자바 자바의정석","title":"기본형 매개변수와 참조형 매개변수 / 참조형 반환타입","date":"May 24, 2023"}},"next":null,"previous":{"fields":{"slug":"/recursive-call/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}